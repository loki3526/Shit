Take multiple files as Command Line Arguments and print their 
inode numbers and file types in c
#include <stdio.h>
#include <stdlib.h>
#include <sys/stat.h>
#include <unistd.h>
int main(int argc, char *argv[]) {
 // Check if at least one file is provided as an argument
 if (argc < 2) {
 printf("Usage: %s <file1> <file2> ...\n", argv[0]);
 return 1;
 }
 // Loop through each provided argument (skip the program 
name)
 for (int i = 1; i < argc; i++) {
 struct stat fileStat;
 // Attempt to retrieve file status
 if (stat(argv[i], &fileStat) == -1) {
 perror("stat");
continue;

 }

 // Print the file name

 printf("File: %s\n", argv[i]);

 // Print the inode number

 printf("Inode Number: %ld\n", (long)fileStat.st_ino);

 // Determine and print the file type

 if (S_ISREG(fileStat.st_mode)) {

 printf("File Type: Regular file\n");

 } else if (S_ISDIR(fileStat.st_mode)) {

 printf("File Type: Directory\n");

 } else if (S_ISLNK(fileStat.st_mode)) {

 printf("File Type: Symbolic link\n");

 } else if (S_ISCHR(fileStat.st_mode)) {

 printf("File Type: Character device\n");

 } else if (S_ISBLK(fileStat.st_mode)) {

 printf("File Type: Block device\n");

 } else if (S_ISFIFO(fileStat.st_mode)) {

 printf("File Type: FIFO (named pipe)\n");

 } else if (S_ISSOCK(fileStat.st_mode)) {

 printf("File Type: Socket\n");
} else {

 printf("File Type: Unknown\n");

 }

 printf("\n");

 }

 return 0;

}

_____
